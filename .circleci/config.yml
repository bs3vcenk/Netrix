version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-28-node
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: 
          name: "Install gradle"
          command: |
            wget https://services.gradle.org/distributions/gradle-4.10.3-bin.zip -P /tmp
            sudo unzip -d /opt/gradle /tmp/gradle-*.zip
            echo 'export GRADLE_HOME=/opt/gradle/gradle-4.10.3' >> $BASH_ENV
            echo 'export PATH=$PATH:/opt/gradle/gradle-4.10.3/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Install ionic and cordova"
          command: |
            sudo npm install -g ionic cordova yarn
      - run:
          name: "Install npm packages"
          command: |
            cd Netrix && yarn install
      - run:
          name: "Install Cordova plugins and add android platform"
          command: |
            cd Netrix && ionic cordova platform add android --noresources
            ionic config set -g telemetry true
      - run:
          name: "Patch @ionic-native/firebase-x:logError"
          command: |
            cd Netrix && ./patchFirebase.sh
      - run:
          name: "Install token"
          command: |
            cd Netrix && echo -e "${GOOGLE_SERVICES_ANDROID}" > google-services.json
      - run:
          name: "Generate apk"
          command: |
            cd Netrix && ionic cordova build android --verbose
            mkdir -p /tmp/apk
            cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk
      - store_artifacts:
          path: /tmp/apk
          destination: apks

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: gservAndroid